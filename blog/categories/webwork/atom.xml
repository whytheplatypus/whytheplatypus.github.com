<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: WeBWorK | Random Bits]]></title>
  <link href="http://whytheplatypus.github.com/blog/categories/webwork/atom.xml" rel="self"/>
  <link href="http://whytheplatypus.github.com/"/>
  <updated>2013-06-01T22:36:25-04:00</updated>
  <id>http://whytheplatypus.github.com/</id>
  <author>
    <name><![CDATA[David Gage]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[VMWare support coming to Vagrant]]></title>
    <link href="http://whytheplatypus.github.com/blog/2013/03/14/vmware-support-coming-to-vagrant/"/>
    <updated>2013-03-14T17:14:00-04:00</updated>
    <id>http://whytheplatypus.github.com/blog/2013/03/14/vmware-support-coming-to-vagrant</id>
    <content type="html"><![CDATA[<p><a href="http://vimeo.com/58059557">Looks like VMWare support</a> is coming to <a href="http://www.vagrantup.com/">Vagrant</a>.</p>

<p><a href="http://www.vagrantup.com/">Vagrant</a> was mentioned on WeBWorK's devel list awhile back as a possiblilty for easy dev installs for our developers.  At the time I looked at it and decided against putting energy into it because I thought VitrualBox was kind of clunky (I have no argument or evidence to support that by the wayâ€¦) and the stand alone DMG we had worked well enough for a quick mac dev distro.<br/>
I've been using VMWare to play with SmartOS for awhile, I've also got a couple ubuntu WeBWorK installs on it, and I really like it so far.</p>

<p>If <a href="http://www.vagrantup.com/">Vagrant</a> is going to support it and, possibly even more exciting, <a href="http://www.hashicorp.com/blog/preview-vagrant-aws.html">cloud options</a> I think it could become an extreamly useful tool for WeBWorK developers and maybe even for the folks managing WeBWorK installs around the world.</p>

<p>It looks like these new features are set to land sometime in the middle of March, so I'll keep an eye on it and hopfull have some setups for WeBWorK soon after it's available.</p>

<p>~WhyThePlatypus</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[openwebwork at Raleigh]]></title>
    <link href="http://whytheplatypus.github.com/blog/2013/03/13/openwebwork-at-raleigh/"/>
    <updated>2013-03-13T15:38:00-04:00</updated>
    <id>http://whytheplatypus.github.com/blog/2013/03/13/openwebwork-at-raleigh</id>
    <content type="html"><![CDATA[<p>We just finished up another webwork code camp, WeBWorK::Raleigh::2013.<br/>
It's always such a blast, especially when we get to work in such a nice environment. The NC State math building is fantastic.</p>

<p>We're trying out a new workflow based on <a href="https://github.com/nvie/gitflow">git flow</a> that Djun Kim and Davide Cervone put together.  There should be a write up for it up on the <a href="http://webwork.maa.org/wiki/Main_Page">wiki</a> in the next few days if there aren't already.  It looks like it will be much easier to maintain... of course coming from what we were doing that's not a hard sell.</p>

<p>The main thing I'm excited about is getting a new WeBWorK API written down.  If we can standardise how we send requests and what data we're guarenteed to get back then a new back end and as many apps and tools that tie into it as we want wont be far behind.</p>

<p>Here's the <a href="https://github.com/openwebwork/WeBWorK-API">API so far</a>. Any and all pull requests, forks, and suggestions help!  The idea is to specify what the request and response will be at a minimum so that applications can use it knowing what to expect at the least, but without limiting them to only what's in the API.</p>

<p>oh! Djun also set up <a href="http://openwebwork.org">openwebwork.org</a>.  It's really nice to have a good looking face for the project :)</p>

<p>~WhyThePlatypus</p>
]]></content>
  </entry>
  
</feed>
