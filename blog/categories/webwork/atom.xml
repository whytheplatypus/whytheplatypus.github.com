<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: WeBWorK | Random Bits]]></title>
  <link href="http://whytheplatypus.github.com/blog/categories/webwork/atom.xml" rel="self"/>
  <link href="http://whytheplatypus.github.com/"/>
  <updated>2013-06-04T19:38:47-04:00</updated>
  <id>http://whytheplatypus.github.com/</id>
  <author>
    <name><![CDATA[David Gage]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[WeBWorK:AnnArbor epilogue]]></title>
    <link href="http://whytheplatypus.github.com/blog/2013/06/04/webwork-annarbor-epilogue/"/>
    <updated>2013-06-04T17:15:00-04:00</updated>
    <id>http://whytheplatypus.github.com/blog/2013/06/04/webwork-annarbor-epilogue</id>
    <content type="html"><![CDATA[<p>Well WeBWorK::AnnArbor is over and WeBWorK has grown in leaps and bounds… or at least it plans to.</p>

<p>Our group finished a data model that survived scrutiny by the rest of the participants. For those of you in the openwebwork community a link to an editable workflowy document of the data model is buried somewhere in the google doc for WeBWorK::AnnArbor.</p>

<p>With this model, the next iteration of WeBWorK will have some nice new features. One of the more interesting to me is the use of the <a href="http://en.wikipedia.org/wiki/Strategy_pattern">strategy pattern</a>. At the moment there are two places this is used, both in the Set object. The first will define how the problems are chosen (in terms of random seed, etc.) and generated. The second will determine how the Set and it's problems are graded. Ambitious future users will be able to define their own strategies for these aspects of a Set and greatly increase the power of WeBWorK.</p>

<p>The other big feature is flexible tagging that will exist at almost every level of the data structure. The hope is that this will make creating and working with groups of objects easy for users. Implementing new functionality associated with tags will also be a powerful result, applying automatic actions to set groups of students for example. It will also give researchers a tool for filtering the massive amount of data that WeBWorK can potentially generate.</p>

<p>WeBWorK now has a new, and empty, <a href="https://github.com/whytheplatypus/WeBWorK_BrEWerY">BrEWerY</a> repository where I hope to start building our new bouncing baby homework delivery system. For the moment we're thinking the code base will remain largely perl. The overall system structure will be as modular as possible without going crazy.</p>

<p>The persistence layer of our data model provides abstraction between the database and the main WeBWorK programming API. The persistence layer can then be extended to support multiple types and configurations of databases, enabling users to pick and choose the database they would like to use (so long as the persistence layer supports it… or they're willing to add that support).</p>

<p>The goal will be a WeBWorK that is extensible, and provides hooks for external applications into its data and functionality.</p>

<p>There was much talk this weekend of using WeBWorK as a tool to gather data about how students learn. We hope that whatever shape the new version of WeBWorK takes, it facilitates the research and progress of math education.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[VMWare support coming to Vagrant]]></title>
    <link href="http://whytheplatypus.github.com/blog/2013/03/14/vmware-support-coming-to-vagrant/"/>
    <updated>2013-03-14T17:14:00-04:00</updated>
    <id>http://whytheplatypus.github.com/blog/2013/03/14/vmware-support-coming-to-vagrant</id>
    <content type="html"><![CDATA[<p><a href="http://vimeo.com/58059557">Looks like VMWare support</a> is coming to <a href="http://www.vagrantup.com/">Vagrant</a>.</p>

<p><a href="http://www.vagrantup.com/">Vagrant</a> was mentioned on WeBWorK's devel list awhile back as a possiblilty for easy dev installs for our developers.  At the time I looked at it and decided against putting energy into it because I thought VitrualBox was kind of clunky (I have no argument or evidence to support that by the way…) and the stand alone DMG we had worked well enough for a quick mac dev distro.<br/>
I've been using VMWare to play with SmartOS for awhile, I've also got a couple ubuntu WeBWorK installs on it, and I really like it so far.</p>

<p>If <a href="http://www.vagrantup.com/">Vagrant</a> is going to support it and, possibly even more exciting, <a href="http://www.hashicorp.com/blog/preview-vagrant-aws.html">cloud options</a> I think it could become an extreamly useful tool for WeBWorK developers and maybe even for the folks managing WeBWorK installs around the world.</p>

<p>It looks like these new features are set to land sometime in the middle of March, so I'll keep an eye on it and hopfull have some setups for WeBWorK soon after it's available.</p>

<p>~WhyThePlatypus</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[openwebwork at Raleigh]]></title>
    <link href="http://whytheplatypus.github.com/blog/2013/03/13/openwebwork-at-raleigh/"/>
    <updated>2013-03-13T15:38:00-04:00</updated>
    <id>http://whytheplatypus.github.com/blog/2013/03/13/openwebwork-at-raleigh</id>
    <content type="html"><![CDATA[<p>We just finished up another webwork code camp, WeBWorK::Raleigh::2013.<br/>
It's always such a blast, especially when we get to work in such a nice environment. The NC State math building is fantastic.</p>

<p>We're trying out a new workflow based on <a href="https://github.com/nvie/gitflow">git flow</a> that Djun Kim and Davide Cervone put together.  There should be a write up for it up on the <a href="http://webwork.maa.org/wiki/Main_Page">wiki</a> in the next few days if there aren't already.  It looks like it will be much easier to maintain... of course coming from what we were doing that's not a hard sell.</p>

<p>The main thing I'm excited about is getting a new WeBWorK API written down.  If we can standardise how we send requests and what data we're guarenteed to get back then a new back end and as many apps and tools that tie into it as we want wont be far behind.</p>

<p>Here's the <a href="https://github.com/openwebwork/WeBWorK-API">API so far</a>. Any and all pull requests, forks, and suggestions help!  The idea is to specify what the request and response will be at a minimum so that applications can use it knowing what to expect at the least, but without limiting them to only what's in the API.</p>

<p>oh! Djun also set up <a href="http://openwebwork.org">openwebwork.org</a>.  It's really nice to have a good looking face for the project :)</p>

<p>~WhyThePlatypus</p>
]]></content>
  </entry>
  
</feed>
